# Vireo make file for linux/unix

# The mkdir command has to be quoted so that it is not intercepted in the windows shell
# and instead uses the version on PATH (ie that is unix mkdir compatible)
MKDIR="mkdir"

VIREO_SDK=..

TARGETS_SUPPORTED=asmjs-unknown-emscripten wasm32-unknown-emscripten
TARGET=asmjs-unknown-emscripten

ifeq ($(filter $(TARGET), $(TARGETS_SUPPORTED)),)
$(error invalid TARGET value, TARGET=$(TARGET) not supported, supported targets are $(TARGETS_SUPPORTED))
endif 

BUILDS_SUPPORTED=debug release profile
BUILD=release

ifeq ($(filter $(BUILD), $(BUILDS_SUPPORTED)),)
$(error invalid BUILD value, BUILD=$(BUILD) not supported, supported builds are $(BUILDS_SUPPORTED))
endif 

OBJS=$(VIREO_SDK)/objs/$(TARGET)/$(BUILD)
DIST=$(VIREO_SDK)/dist/$(TARGET)/$(BUILD)

INCDIR=$(VIREO_SDK)/source/include
CORESOURCEDIR=$(VIREO_SDK)/source/core
IOSOURCEDIR=$(VIREO_SDK)/source/io
UTSOURCEDIR=$(VIREO_SDK)/source/unittest

.PHONY: clean install help vjs dox
.DEFAULT_GOAL=help

clean:
	rm -f $(foreach CURRTARGET, $(TARGETS_SUPPORTED), $(foreach CURRBUILD, $(BUILDS_SUPPORTED), $(VIREO_SDK)/objs/$(CURRTARGET)/$(CURRBUILD)/* ))
	rm -f $(foreach CURRTARGET, $(TARGETS_SUPPORTED), $(foreach CURRBUILD, $(BUILDS_SUPPORTED), $(VIREO_SDK)/dist/$(CURRTARGET)/$(CURRBUILD)/* ))
help:
	@echo 'Execute "make vjs"     to build vireo.js'
	@echo '        "make clean"   to remove intermediate files'
	@echo '        "make install" to copy files to web directory'
	@echo '        "make"         to print this help dialogue'
	@echo ''

# Instead of trying fake out make for emscripten just build it explicitly
# To install the Emscripten SDK
#   https://github.com/kripken/emscripten/wiki

# Note on debugging:
#   https://github.com/kripken/emscripten/wiki/Optimizing-Code

# On optimization, resulting Vireo.js # yielded the following sizes:
#
#  In early builds of emscripten high level optimizations (-O3 -Os) tended to fail though
#  Vireo had an alignment bug that may have caused the failures.
#
#  5/2014 using emcc 1.16
#  -O3 833k / -Os 760k / -Oz 719k
#
#  10/2014 using emcc 1.22.0
#  Data segment is now broken out to the vireo.js.asm file
#  -03 611k+35k  / -Os 571k+35k / -Oz 527k+35k  (all work)
#  Vireo has grown as well, so emscripten is getting better if the over all size has shrunk by about 20%

EMCC= emcc

# release config
EM_OPTFLAG = -O3

ifeq ($(BUILD), debug)
   EM_OPTFLAG = -g4 -s ASSERTIONS=2 -s SAFE_HEAP=1
endif

ifeq ($(BUILD), profile)
   EM_OPTFLAG = --profiling
endif

ifneq ($(wildcard custom.mak),)
   include custom.mak
endif

# Can be overrided in custom.mak
EM_OPTFLAGS ?= $(EM_OPTFLAG)
EM_ANALYSIS_OPT_FLAG = $(EM_OPTFLAG)

ifeq ($(TARGET), wasm32-unknown-emscripten)
   WASM_FLAG = -s WASM=1
endif

# NO_DYNAMIC_EXECUTION=1 Allows Vireo to be used in CSP environments where eval() is forbidden: https://github.com/kripken/emscripten/blob/master/src/settings.js#L563
EM_OPT = $(EM_OPTFLAGS) $(WASM_FLAG) -s NO_EXIT_RUNTIME=1 -std=c++14 -fno-exceptions --memory-init-file 0 -s NO_DYNAMIC_EXECUTION=1
EMFLAGS = -I$(INCDIR) -DkVireoOS_emscripten $(EM_OPT)
EMLIBRARY = --js-library $(CORESOURCEDIR)/library_coreHelpers.js \
            --js-library $(CORESOURCEDIR)/library_eventHelpers.js \
            --js-library $(IOSOURCEDIR)/library_canvas2d.js \
            --js-library $(IOSOURCEDIR)/library_httpClient.js \
            --js-library $(IOSOURCEDIR)/library_javaScriptInvoke.js \
            --js-library $(IOSOURCEDIR)/library_propertyNode.js
PREJS = $(OBJS)/vireo.preamble.js
POSTJS = $(OBJS)/vireo.postamble.js
EM_WRAP = --pre-js $(PREJS) --post-js $(POSTJS)

EM_EXPORTS = -s EXPORTED_FUNCTIONS="[\
    '_Vireo_Version', \
    '_Vireo_MaxExecWakeUpTime', \
    '_EggShell_Create', \
    '_EggShell_REPL',\
    '_EggShell_ExecuteSlices',\
    '_EggShell_Delete',\
    '_EggShell_AllocateData',\
    '_EggShell_DeallocateData',\
    '_EggShell_FindValue',\
    '_EggShell_FindSubValue',\
    '_EggShell_ReadDouble',\
    '_EggShell_WriteDouble',\
    '_EggShell_ReadValueString',\
    '_EggShell_WriteValueString',\
    '_EggShell_ResizeArray',\
    '_EggShell_GetPointer',\
    '_EggShell_GetArrayDimLength',\
    '_Occurrence_Set',\
    '_OccurEvent',\
    '_Data_ValidateArrayType',\
    '_Data_GetStringBegin',\
    '_Data_GetStringLength',\
    '_Data_ReadBoolean',\
    '_Data_ReadInt8',\
    '_Data_ReadInt16',\
    '_Data_ReadInt32',\
    '_Data_ReadUInt8',\
    '_Data_ReadUInt16',\
    '_Data_ReadUInt32',\
    '_Data_ReadSingle',\
    '_Data_ReadDouble',\
    '_Data_ReadJavaScriptRefNum',\
    '_Data_WriteString',\
    '_Data_WriteBoolean',\
    '_Data_WriteInt8',\
    '_Data_WriteInt16',\
    '_Data_WriteInt32',\
    '_Data_WriteUInt8',\
    '_Data_WriteUInt16',\
    '_Data_WriteUInt32',\
    '_Data_WriteSingle',\
    '_Data_WriteDouble',\
    '_Data_WriteJavaScriptRefNum',\
    '_Data_GetArrayMetadata',\
    '_Data_GetArrayBegin',\
    '_Data_GetArrayDimensions',\
    '_Data_GetArrayLength',\
    '_Data_GetArrayDimLength',\
    '_Data_ResizeArray',\
    '_TypeRef_TopAQSize',\
    '_TypeRef_Name',\
    '_TypeRef_ElementName',\
    '_TypeRef_SubElementCount',\
    '_TypeRef_GetSubElementByIndex',\
    '_TypeRef_IsCluster',\
    '_TypeRef_IsArray',\
    '_TypeRef_IsBoolean',\
    '_TypeRef_IsInteger',\
    '_TypeRef_IsSigned',\
    '_TypeRef_IsEnum',\
    '_TypeRef_IsFloat',\
    '_TypeRef_IsString',\
    '_TypeRef_IsPath',\
    '_TypeRef_IsTimestamp',\
    '_TypeRef_IsComplex',\
    '_TypeRef_IsAnalogWaveform',\
    '_JavaScriptInvoke_GetParameterType',\
    '_JavaScriptInvoke_GetParameterPointer',\
    '_JavaScriptInvoke_GetArrayElementType',\
    '_TypeRef_Rank'\
    ]"

EM_RUNTIME_EXPORTS = -s EXTRA_EXPORTED_RUNTIME_METHODS="[\
	'cwrap', \
	'lengthBytesUTF8', \
	'stackAlloc', \
	'stackSave', \
	'stackRestore', \
	'stringToUTF8', \
	'getValue', \
	'setValue', \
	'Pointer_stringify', \
	'writeArrayToMemory', \
    ]"

EM_BC_FILES=$(OBJS)/Array.bc\
	$(OBJS)/Assert.bc\
	$(OBJS)/CEntryPoints.bc\
	$(OBJS)/ControlRef.bc\
	$(OBJS)/EventLog.bc\
	$(OBJS)/Events.bc\
	$(OBJS)/ExecutionContext.bc\
	$(OBJS)/GenericFunctions.bc\
	$(OBJS)/JavaScriptRef.bc\
	$(OBJS)/MatchPat.bc\
	$(OBJS)/Math.bc\
	$(OBJS)/NumericString.bc\
	$(OBJS)/Platform.bc\
	$(OBJS)/RefNum.bc\
	$(OBJS)/Queue.bc\
	$(OBJS)/String.bc\
	$(OBJS)/StringUtilities.bc\
	$(OBJS)/Synchronization.bc\
	$(OBJS)/TDCodecLVFlat.bc\
	$(OBJS)/TDCodecVia.bc\
	$(OBJS)/Thread.bc\
	$(OBJS)/Date.bc\
	$(OBJS)/Timestamp.bc\
	$(OBJS)/TimeFunctions.bc\
	$(OBJS)/TypeAndDataManager.bc\
	$(OBJS)/TypeAndDataReflection.bc\
	$(OBJS)/TypeDefiner.bc\
	$(OBJS)/TypeTemplates.bc\
	$(OBJS)/UnitTest.bc\
	$(OBJS)/VirtualInstrument.bc\
	$(OBJS)/RefNumTest.bc\
	$(OBJS)/Canvas2d.bc\
	$(OBJS)/FileIO.bc\
	$(OBJS)/HttpClient.bc\
	$(OBJS)/Waveform.bc\
	$(OBJS)/JavaScriptInvoke.bc\
	$(OBJS)/PropertyNode.bc

ifneq (,$(wildcard ./EmMakefile-AAL))
AAL_ONLY = 1
-include EmMakefile-AAL
endif

$(OBJS)/%.bc: $(CORESOURCEDIR)/%.cpp
	$(EMCC) $(EMFLAGS) -MD -MF $(patsubst %.bc,%.bc.d,$@) -c -o $@ $<
$(OBJS)/%.bc: $(IOSOURCEDIR)/%.cpp
	$(EMCC) $(EMFLAGS) -MD -MF $(patsubst %.bc,%.bc.d,$@) -c -o $@ $<
$(OBJS)/%.bc: $(UTSOURCEDIR)/%.cpp
	$(EMCC) $(EMFLAGS) -MD -MF $(patsubst %.bc,%.bc.d,$@) -c -o $@ $<

$(EM_BC_FILES): | $(OBJS)
$(OBJS):
	@$(MKDIR) -p $(OBJS)

$(PREJS) $(POSTJS): $(CORESOURCEDIR)/vireo.wrapper.js
	node splitVireoWrapper.js $(CORESOURCEDIR)/vireo.wrapper.js $(PREJS) $(POSTJS)

vjs: $(DIST)/vireo.js

$(DIST)/vireo.js: $(EM_BC_FILES) $(ANALYSIS_LIBRARY) $(PREJS) $(POSTJS) | $(DIST)
	$(EMCC) $(EM_OPT) $(EM_WRAP) $(EMLIBRARY) $(EM_BC_FILES) $(ANALYSIS_LIBRARY) $(EM_EXPORTS) $(EM_RUNTIME_EXPORTS) -o $@
$(DIST):
	@$(MKDIR) -p $(DIST)
