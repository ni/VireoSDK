Test Integer 71-------------------------
%020d => 00000000000000000071
%020d => 00000000000000000162
%+020x => 00000000000000002700
%#020x => 0X0000000000000003E8
%_1d => 70
%_2d => 360
%_2d => 10000

Test Binary 1000111 -------------------------
%b => 1000111
%b => 101101100
%b => 11111111111111111111111110110111

Test Float 162.346300 -------------------------
%010_5f => *0000162.35*
%+_5f   => *+162.35*
%+_0f   => *+200*
%10_2f  => *       160*
%+10.5f => *+162.34630*
%10.5f  => * 162.34630*
%#10.6f => *  162.3463*
%.0f => *162*

Test Float 9.960000 -------------------------
%010_1f => *0000000010*
%+_0f   => *+10*
%10_2f  => *        10*
%-10.1f => *10.0      *
%.0f => *10*
%#10.6f => *      9.96*
Localized Decimal Separator => *9.960000 9,960000 9.960000 9.960000 9.960000*
ASCII Escape codes(Hex) => *a\62\c\\6471*

Test Float 0.019936-------------------------
%010_1f => *0000000.02*
%+_5f   => *+0.019936*
%10_2f  => *     0.020*
%-10.1f => *0.0       *
%010_1f => *0000000.02*
%#10.6f => *  0.019936*

Test Exp 9.999996E+2-------------------------
%+10.5e => *+1.00000E+3*
%010_5e  => *01.0000E+3*
%#10.6e  => *9.999996E+2*
%+^010_3e=> *+001.00E+3*
%^10.5e  => *999.99960E+0*

Test Exp 1.399957E+4-------------------------
%+10.5e => *+1.39996E+4*
%010_5e  => *01.4000E+4*
%^10.6e  => *13.999573E+3*
%+^010_3e=> *+0014.0E+3*

Test Exp 7.573000E+0-------------------------
%+10.1e => *   +7.6E+0*
%010_5e  => *07.5730E+0*
%^10.6e  => *7.573000E+0*
%+^010_3e=> *+007.57E+0*
%.0f => *8*
%10_0f  => *         8*
Test Exp -1.979600E-4-------------------------
%+10.5e   => *-1.97960E-4*
%#010_5e  => *-1.9796E-4*
%^10.6e   => *-197.960000E-6*
%+^010_3e => *-000198E-6*

Test Zero-------------------------
%+10.5e   => *+0.00000E+0*
%#0_5e  => *0E+0*
%^10.6e   => *0.000000E+0*
%+^010_3e => *+000.00E+0*
%010_1f => *0000000000*
%#+_5f   => *+0*
%10_2f  => *       0.0*
%-10.1f => *0.0       *
%#10.6f => *         0*

Test int to %e & %f-------------------------
%+10.2f   => *    +71.00*
%#0_5f    => *364*
%^10.6e   => *-73.000000E+0*
%+^010_3f => *+009.98E+3*

Test %g-------------------------
%+10.5g   => *+162.34630*
%#0_5g    => *162.35*
%^10.6g   => *  9.960000*
%+^010_3g => *+000001000*
%010_1g   => *0000001E+4*
%+_5g     => *+7.5730*
%10_2g    => *     0.020*
%-10.1g   => *-0.0      *
%10.6g    => *  0.000000*
%10.5g    => *1.23000E-16*

Test %p-------------------------
%p        => *71.00000*
%+10.5p    => *+162.34630*
%#0_5p    => *123a*
%0_5p      => *123.00a*
%p   => *893.5457E*
%^10.2p   => *893.545676E*

Test Complex Double 128674.987500 +999.999600 i -------------------------
%020_1f => *000000100000 +1000 i*
%+_0f   => *+100000 +1000 i*
%20_2f  => *      130000 +1000 i*
%-20.1f => *128675.0 +1000.0 i  *
%.0f => *128675 +1000 i*
%#25.6f => *  128674.9875 +999.9996 i*

Test Complex Double -13999.573568 -0.019360 i -------------------------
%020_1f => *-00000010000 -0.00 i*
%+_0f   => *-10000 -0.00 i*
%20_2f  => *     -14000 -0.000 i*
%-20.1f => *-13999.6 -0.0 i     *
%.0f => *-14000 -0 i*
%#25.6f => * -13999.573568 -0.01936 i*
Empty format code input
Default formatted: (71 162.346300 abcde)
Default formatted: (71 162.346300 abcde)

 test negative number
%_3d %_2d %_2f %_3f => -1220 -100000 -130000 -1000000
