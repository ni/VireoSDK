// Copyright (c) 2020 National Instruments
// SPDX-License-Identifier: MIT

define(Mandelbrot v(.VirtualInstrument (
    // Parameter list
    c(
        i(.ComplexDouble a)
        o(.ComplexDouble z)
    )
    // Dataspace
    c(
        e(.ComplexDouble cmplxZero)
        e(.Int32 i)
        e(v(.Int32 0) c0)
        e(v(.Int32 1) c1)
        e(v(.Int32 50) c50)
    )
    1
    clump (1
        Copy(c0 i)
        Copy(cmplxZero z)  // alternately Init(z)
        Perch(0)
            MulComplexDouble(z z z)
            AddComplexDouble(z a z)
        ForLoopTail(0 i c50)
    )
)))

define(MandelbrotMain v(.VirtualInstrument (
    // Dataspace
    c(
        e(.StdOut file)
        e(.Int32 err)
        e(v(.String '.')    char1)
        e(v(.String '#')    char2)
        e(v(.String '\n')   lineFeed)

        e(v(.Double 1.0)    y)
        e(v(.Double 1.0)    yFirst)
        e(v(.Double -1.0)   yLast)
        e(v(.Double -0.05)  yDelta)

        e(.Double   x)
        e(v(.Double -2.0)   xFirst)
        e(v(.Double 0.5)    xLast)
        e(v(.Double 0.0315) xDelta)

        e(v(.Double 2)      two)
        e(.ComplexDouble    cmplxIn)
        e(.ComplexDouble    cmplxOut)
        e(.Double           abs)

        e(.Int64            tStart)
        e(.Int64            tDone)
        )
    1
    clump (1
        GetMicrosecondTickCount(tStart)

        Perch(0)
            Copy(xFirst x)
            Perch(1)
                // Explicit constructor for simple cluster types is not needed
                // fields can be set directly
                Copy(x cmplxIn.real)
                Copy(y cmplxIn.imaginary)
                Mandelbrot(cmplxIn cmplxOut)
                AbsoluteComplexDouble(cmplxOut abs)
                BranchIfLTDouble(2 abs two)
                    StreamWrite(file char1 err)
                    Branch(3)
                Perch(2)
                    StreamWrite(file char2 err)
                Perch(3)
            AddDouble(x xDelta x)
            BranchIfLEDouble(1 x xLast)
        StreamWrite(file lineFeed err)
        AddDouble(y yDelta y)
        BranchIfGEDouble(0 y yLast)

        GetMicrosecondTickCount(tDone)
        SubInt64(tDone tStart tDone)
        Printf("Time to calculate Mandelbrot: %s microseconds" tDone)
    )
) ) )
enqueue(MandelbrotMain)
