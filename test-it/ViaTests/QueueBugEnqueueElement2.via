// Autogenerated Vireo assembly file
// Generated on 02/14/2017 16:17:53
define (c5 dv(.Int32 1))
define (c11 dv(.Double 1))
define (g1 dv(.String 'my queue 2'))


define (c0 dv(.Double 0))
define (c2 dv(.Double 1))
define (c3 dv(.Int32 1))
define (c4 dv(.Double 2))

define (c6 dv(.Int32 1))
define (c7 dv(.Int32 50))
define (g8 dv(a(.Double *) (1)))
define (c9 dv(.Double 0))
define (g10 dv(.String 'my queue'))
define (c12 dv(.Int32 1))
define (c13 dv(.Double 2))
define (c14 dv(.Int32 2))
define (c15 dv(.Double 1))
define (c16 dv(.Double 2))
define (g17 dv(.String 'my queue'))
define (c18 dv(.Double 0))
define (c19 dv(.Int32 2))
//---------------------------------------------------
//VI Definition: TestVIEnqueueElement.gviweb
define (_TestVIEnqueueElement%2Egviweb dv(.VirtualInstrument (
    Locals: c(   // Data Space1
        e(.QueueRefNum<.Double> local20)   // QueueRefNum
        e(.Boolean local21)   // Boolean
        e(c(
            e(.Boolean status)   // Boolean
            e(.Int32 code)   // Int32
            e(.String source)   // String
        ) local25)   // Cluster
        e(.QueueRefNum<.Double> local75)   // QueueRefNum
        e(c(
            e(.Boolean status)   // Boolean
            e(.Int32 code)   // Int32
            e(.String source)   // String
        ) local80)   // Cluster
    )

        clump(1
        Copy(true local80.status)
        Copy(7 local80.code)
        ObtainQueue(local20 c5 g1 * * local25)
        Printf("Enqueue errIn:<%z>\n" local80)
        Enqueue(local75 c11 * * local80)
        Printf("Enqueue errOut:<%z>\n" local80)
        BranchIfEQ(10 local80.code 7)
        Printf("Failed.\n")
        Branch(20)
        Perch(10)
        Printf("Passed.\n")
        Perch(20)

/* Clump Ended. */    )
)))
enqueue (_TestVIEnqueueElement%2Egviweb)
//Finished!! :D
