
define(Test dv(.VirtualInstrument (
 c(
    e(dv(.Int32 0)  c0) 
    e(dv(.Int32 1)  c1) 
    e(dv(.Int32 2)  c2) 
    e(dv(.Int32 3)  c3) 
    e(dv(.Int32 4)  c4) 
    e(dv(.Int32 5)  c5) 
    e(dv(.Int32 6)  c6) 
    e(dv(.Int32 7)  c7) 
    e(dv(.Int32 8)  c8) 
    e(dv(.Int32 16)  c16) 

   // e(a(e(.Double) -5)    arrayOfDoubleBounded1d) 

    e(a(.Double 5)    arrayOfDoubleFixed1d) 
    e(a(.Double 5 5)    arrayOfDoubleFixed2d)
    e(a(.Double 5 5 5)    arrayOfDoubleFixed3d)

    e(a(.Double *)    arrayOfDouble1d_1) 
    e(a(.Double *)    arrayOfDouble1d_2) 
    e(a(.Double *)    arrayOfDouble1d_3) 

    e(a(.Double * *)  arrayOfDouble2d) 
    e(a(.Double * * *)  arrayOfDouble3d) 
    e(a(.Double * * * *)  arrayOfDouble4d) 
    e(a(.Double * * * * *)  arrayOfDouble5d) 
    e(a(.Double * * * * * *)  arrayOfDouble6d) 
    e(a(.Double * * * * * * *)  arrayOfDouble7d) 
    e(a(.Double * * * * * * * *)  arrayOfDouble8d) 
    
 
    e(dv(a(.Double *)  (1 2 3))  arrayWithDefaultValues3)
    e(dv(a(.Double *)  (4 5))  arrayWithDefaultValues2) 
    e(dv(a(.Double *)  (0))  arrayWithDefaultValues1) 
    e(dv(a(.Double *)  ())  arrayWithDefaultValues0) 

    e(.Boolean vBool) 
    e(.Type  vType) 
    e(.Int32 vSize) 
    e(.Int8  vInt8) 
    e(.Int16 vInt16) 
    e(.Int32 vInt32) 
    e(.Int64 vInt64) 
    e(.UInt8  vUInt8) 
    e(.UInt16 vUInt16) 
    e(.UInt32 vUInt32) 
    e(.UInt64 vUInt64)   ) 
  clump(1 
    // Test initial sizes
    //------
    Println(c3)
    ArrayLength(arrayOfDouble1d_1 vSize)
    IsEQ(vSize c0 vBool)
    Println(vBool)
    ArrayRank(arrayOfDouble1d_1 vSize)
    IsEQ(vSize c1 vBool)
    Println(vBool)
    //------
    ArrayLength(arrayOfDouble2d vSize)
    IsEQ(vSize c0 vBool)
    Println(vSize)
    Println(vBool)
    //------
    ArrayLength(arrayWithDefaultValues3 vSize)
    IsEQ(vSize c3 vBool)
    Printf("3 default elt array has size %d\n" vSize) 
    Println(vBool)
    //------
    ArrayLength(arrayWithDefaultValues2 vSize) 
    IsEQ(vSize c2 vBool) 
    Printf("2 default elt array has size %d\n" vSize) 
    Println(vBool) 
    //------
    ArrayLength(arrayWithDefaultValues1 vSize) 
    IsEQ(vSize c1 vBool) 
    Printf("1 default elt array has size %d\n" vSize) 
    Println(vBool) 
    //------
    ArrayLength(arrayWithDefaultValues0 vSize) 
    IsEQ(vSize c0 vBool) 
    Printf("0 default elt array has size %d\n" vSize) 
    Println(vBool) 

    //-------------------------------------
    // Various ranks fixed arrays
       Println(c3) 
    ArrayRank(arrayOfDoubleFixed1d vSize) 
    IsEQ(vSize c1 vBool) 
    Println(vSize) 
    Println(vBool) 
    //------
    ArrayRank(arrayOfDoubleFixed2d vSize) 
    IsEQ(vSize c2 vBool) 
    Println(vSize) 
    Println(vBool) 
    //------
    ArrayRank(arrayOfDoubleFixed3d vSize) 
    IsEQ(vSize c3 vBool) 
    Println(vSize) 
    Println(vBool) 
    //------

    //-------------------------------------
    ArrayLength(arrayOfDoubleFixed1d vSize) 
    IsEQ(vSize c5 vBool) 
    Println(vSize) 
    Println(vBool) 

    //-------------------------------------
    // Various ranks
    //------
    ArrayRank(arrayOfDouble2d vSize) 
    IsEQ(vSize c2 vBool) 
    Println(vSize) 
    Println(vBool) 
    //------
    ArrayRank(arrayOfDouble2d vSize) 
    IsEQ(vSize c2 vBool) 
    Println(vSize) 
    Println(vBool) 
    //------
    ArrayRank(arrayOfDouble3d vSize) 
    IsEQ(vSize c3 vBool) 
    Println(vSize) 
    Println(vBool) 
    //------
    ArrayRank(arrayOfDouble4d vSize) 
    IsEQ(vSize c4 vBool) 
    Println(vSize) 
    Println(vBool) 
    //------
    ArrayRank(arrayOfDouble5d vSize) 
    IsEQ(vSize c5 vBool) 
    Println(vSize) 
    Println(vBool) 
    //------
    ArrayRank(arrayOfDouble6d vSize) 
    IsEQ(vSize c6 vBool) 
    Println(vSize) 
    Println(vBool) 
    //------
    ArrayRank(arrayOfDouble7d vSize) 
    IsEQ(vSize c7 vBool) 
    Println(vSize) 
    Println(vBool) 
    //------
    ArrayRank(arrayOfDouble8d vSize) 
    IsEQ(vSize c8 vBool) 
    Println(vSize) 
    Println(vBool) 
    //------
   )
 ) ) )
enqueue(Test)



