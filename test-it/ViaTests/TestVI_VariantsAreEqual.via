// Autogenerated Vireo assembly file
// Generated on 04/04/2019 13:41:30
//---------------------------------------------------
//VI Definition: ::Web Server::Interactive::Application::Variant_SetGetAttributes_ExpectedResults.gviweb
define (Application%3A%3AVariant_SetGetAttributes_ExpectedResults%2Egviweb dv(.VirtualInstrument (
    Locals: c(   // Data Space

        ce(dv(.Int32 1) int32A)
        ce(dv(.Int32 2) int32B)
        e(.Variant variantUInt32A)
        e(.Variant variantUInt32B)
        e(.Boolean uInt32VariantsAreEqual)

        e(dv(a(.UInt32 *) (1 2 3 4)) arrayA)
        e(dv(a(.UInt32 *) (1 2 3 5)) arrayB)
        e(.Variant variantArrayOfInt32A)
        e(.Variant variantArrayOfInt32B)
        e(.Boolean int32ArrayVariantsAreEqual)

    	e(dv(a(.UInt32 * * *) (((111 112 113)(121 122 123))((211 212 213)(221 222 223)))) arrayX3d)
        e(dv(a(.UInt32 * * *) (((111 112 113)(121 122 123))((211 212 213)(221 222 223)))) arrayY3d)
        e(.Variant variantX3d)
        e(.Variant variantY3d)
        e(.Boolean arrayVariants3DAreEqual)

        ce(dv(.String 'VARIANT') stringX)
        ce(dv(.String 'VARIANT2') stringY)
        e(.Variant variantStringX)
        e(.Variant variantStringY)
        e(.Boolean stringVariantsAreEqual)

        e(c(
            e(dv(.Int32 1) n1)
            e(dv(.Int32 2) n2)
            e(dv(.Int32 3) n3)
        ) clusterX)
        e(c(
            e(dv(.Int32 4) n1)
            e(dv(.Int32 5) n2)
            e(dv(.Int32 6) n3)
        ) clusterY)
        e(.Variant variantClusterX)
        e(.Variant variantClusterY)
        e(.Boolean clusterVariantsAreEqual)
    )
        clump(1
        // UInt32 tests
        // DataToVariant(int32A variantUInt32A)
        // DataToVariant(int32B variantUInt32B)
        // IsEQ(variantUInt32A variantUInt32B uInt32VariantsAreEqual)
        // Printf("uInt32VariantsAreEqual = %z\n" uInt32VariantsAreEqual)

        // 1D Array Int32 tests
        // DataToVariant(arrayA variantArrayOfInt32A)
        // DataToVariant(arrayB variantArrayOfInt32B)
        // IsEQ(variantArrayOfInt32A variantArrayOfInt32B int32ArrayVariantsAreEqual)
        // Printf("int32ArrayVariantsAreEqual = %z\n" int32ArrayVariantsAreEqual)

        // 3D Array Int32 tests
        // DataToVariant(arrayX3d variantX3d)
        // DataToVariant(arrayY3d variantY3d)
        // IsEQ(variantX3d variantY3d arrayVariants3DAreEqual)
        // Printf("arrayVariants3DAreEqual = %z\n" arrayVariants3DAreEqual)

        // 3D Array Int32 tests
        // DataToVariant(stringX variantStringX)
        // DataToVariant(stringY variantStringY)
        // IsEQ(variantStringX variantStringY stringVariantsAreEqual)
        // Printf("stringVariantsAreEqual = %z\n" stringVariantsAreEqual)

        // Cluster Int32 tests
        DataToVariant(clusterX variantClusterX)
        DataToVariant(clusterY variantClusterY)
        IsEQ(variantClusterX variantClusterY clusterVariantsAreEqual)
        Printf("clusterVariantsAreEqual = %z\n" clusterVariantsAreEqual)

        // Code End
/* Clump Ended. */    )
)))
enqueue (Application%3A%3AVariant_SetGetAttributes_ExpectedResults%2Egviweb)
//Finished!! :D
