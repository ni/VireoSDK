//VI Definition: Variant.via
define(TestVariantToData dv(.VirtualInstrument (
    Params:c(
        i(Variant myVar)
    )
    Locals: c(
        e(dv(.Int32 23) myInt)
        e(dv(.Int32 0) myIntType)
        e(dv(.String 'xxx') myStr)
        e(dv(.String '') myStrType)
        ce(dv(.ErrorCluster (false 0 '' ))noError)
        e(dv(.ErrorCluster (false 0 '' ))error)
        e(dv(.ErrorCluster (false 0 '' ))error2)
    )
    clump (1 // top level
        Copy(noError error)
        Copy(noError error2)
        VariantToData(myVar error myIntType myInt)
        Printf("TestVariantToData: myInt=%z, error=(%z %z)\n" myInt error.status error.code)
        VariantToData(myVar error2 myStrType myStr)
        Printf("TestVariantToData: myStr=%z, error2=(%z %z)\n" myStr error2.status error2.code)
    )
)))

define(TestDataToVariant dv(.VirtualInstrument (
    Locals: c(
        e(.Variant myVar)
        e(.Variant myVar2)
        e(.Variant myVar3)
        e(dv(.Int32 23) myInt)
        e(dv(.Int32 23) myInt2)
        e(dv(.Int32 0) myIntType)
        ce(dv(.ErrorCluster (false 0 '' ))noError)
        e(dv(.ErrorCluster (false 0 '' ))error)
        e(dv(.ErrorCluster (false 0 '' ))error2)
    )
    clump (1 // top level
        Copy(noError error)
        Copy(noError error2)
        DataToVariant(myInt myVar)
        DataToVariant(myVar myVar2)
        VariantToData(myVar2 error myVar2 myVar3)
        Printf("TestDataToVariant: myVar3=%z, error=(%z %z)\n" myVar3 error.status error.code)
        VariantToData(myVar3 error2 myIntType myInt2)
        Printf("TestDataToVariant: myInt2=%z, error2=(%z %z)\n" myInt2 error2.status error2.code)
    )
)))

define(TestArrayOfVariants dv(.VirtualInstrument (
    Locals: c(
        e(.Variant myVar1)
        e(.Variant myVar2)
        e(a(.Variant *) myVarArray)
        e(.Variant myVar1_out)
        e(.Variant myVar2_out)
        e(dv(.Int32 255) myInt1)
        e(dv(.Int32 254) myInt2)
        e(dv(.Int32 0) myInt1_out)
        e(dv(.Int32 0) myInt2_out)
        e(dv(.Int32 0) myIntType)
        ce(dv(.ErrorCluster (false 0 '' ))noError)
        e(dv(.ErrorCluster (false 0 '' ))error1)
        e(dv(.ErrorCluster (false 0 '' ))error2)
    )
    clump (1 // top level
        Copy(noError error1)
        Copy(noError error2)
        DataToVariant(myInt1 myVar1)
        DataToVariant(myInt2 myVar2)
        ArrayConcatenate(myVarArray myVar1 myVar2)
        ArrayIndex(myVarArray myVar1_out 0)
        ArrayIndex(myVarArray myVar2_out 1)
        VariantToData(myVar1_out error1 myIntType myInt1_out)
        VariantToData(myVar2_out error2 myIntType myInt2_out)
        Printf("TestArrayOfVariants: myVar1_out=%z, error=(%z %z) myInt1_out=%z\n" myVar1_out error1.status error1.code myInt1_out)
        Printf("TestArrayOfVariants: myVar2_out=%z, error2=(%z %z) myInt2_out=%z\n" myVar2_out error2.status error2.code myInt2_out)
    )
)))

define(videf1 dv(.VirtualInstrument (
    c(
        e(dv(.Int32 255) myInt)
        e(.Variant myVar)
        e(.Variant myVar2)
        e(dv(.Int32 23) myInt2)
        e(dv(.Int32 23) myInt3)
        e(dv(.Int32 0) myIntType)
        e(dv(.String 'Hello World') myStr)
        e(dv(.String 'abc') myStr2)
        e(dv(.String '') myStrType)
        e(.ErrorCluster error)
    )
    clump(1
    DataToVariant(myInt myVar)
    VariantToData(myVar error myIntType myInt2)
    Printf("myInt2=%z, error=(%z %z)\n" myInt2 error.status error.code)
    DataToVariant(myStr myVar2)
    VariantToData(myVar2 error myStrType myStr2)
    Printf("myStr2=%z, error=(%z %z)\n" myStr2 error.status error.code)
    VariantToData(myVar2 error myIntType myInt3)
    Printf("myInt3=%z, error=(%z %z)\n" myInt3 error.status error.code)

    TestVariantToData(myVar)
    TestVariantToData(myVar2)
    TestDataToVariant()
    TestArrayOfVariants()
//--- end of vi
    )
)))
enqueue(videf1)
