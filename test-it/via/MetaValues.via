start( VI<(
    Locals: c(
        e(Int32 x)
)
    clump(
        Printf("Double Rank %z \n" Double.$Rank)
        Printf("Double TopAQSize %z \n" Double.$TopAQSize)
        Printf("Double Name %s \n" Double.$Name)
        Printf("Double IsFlat %s \n" Double.$IsFlat)
        Printf("Double IsFlat type %z \n" Double.$IsFlat.$Type)
        Printf("Double IsFlat size %z \n" Double.$IsFlat.$TopAQSize)
        Printf("Double Type %z \n" Double.$Type)
        Printf("Double Base Type %s \n" Double.$BaseType.$Name)
        Printf("------------\n")

        Printf("String IsFlat %s \n" String.$IsFlat)
        Printf("String Rank %z \n" String.$Rank)

        Printf("Int8 TopAQSize %z \n" Int8.$TopAQSize)
        Printf("Int16 TopAQSize %z \n" Int16.$TopAQSize)
        Printf("Int32 TopAQSize %z \n" Int32.$TopAQSize)
        Printf("Int64 TopAQSize %z \n" Int64.$TopAQSize)


    //    Printf("%s is mutable? %s \n" x x.$IsMutable)
    //    Printf("%s is mutable? %s \n" Int32 Int32.$IsMutable)
        Printf("------------\n")
        Printf("String Rank %z \n" String.$Rank)
        )
) > )
