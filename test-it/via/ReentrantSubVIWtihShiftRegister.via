// Autogenerated Vireo assembly file
// Generated on Tue Feb 11 11:14:47 2014

define(c0 dv(.Single 10.1) )
define(c1 dv(.Int32 9) )
define(c2 dv(.Single 2.4) )
define(c3 dv(.Int32 5) )
define(c4 dv(.Single -10.4) )
define(c5 dv(.Boolean true) )
define(c6 dv(.Int32 0) )
define(c7 dv(.Int32 1) )
//---------------------------------------------------
//VI Definition: floating_point_accumulator_reentrant.vi
//This tests that local4 (shiftregister) is not shared between clones of this vi.
define(videf1 dv(.ReentrantVirtualInstrument (
    c(
        o(dv(.Single 0) local5)   // Numeric out
        i(dv(.Single 0) local1)   // Numeric
    )
    c(
        e(.Single local2)   // Numeric
        e(.Single local3)
        e(.Single local4)
    )
    clump(1
        Copy(local1 local2 )
//--- begin while loop
        Perch(0)
        Copy(local4 local3 )     // LSR copy into inner wire
        Add(local3 local2 local3)
        Copy(local3 local4 )
        BranchIfTrue(1 c5)                        // Loop condition terminal
        Branch(0)                                 // loop again
//--- end while loop
        Perch(1)
        Copy(local4 local5 )     // FP Term
//--- end of vi
    )
)))
//---------------------------------------------------
//VI Definition: floating_point_accumulator_reentrant_test.vi
define(videf2 dv(.VirtualInstrument (
    c(
        e(.Single local1)   // Numeric out
        e(.Int32 local2)
        e(.Boolean local3)
    )
    clump(1
        videf1(local1 c0)
        Println(local1)
        Copy(c6 local2 )                          // initialize i
//--- begin while loop
        Perch(0)
        videf1(local1 c2)
        IsEQ(c1 local2 local3)
        BranchIfTrue(1 local3)                    // Loop condition terminal
        Add(local2 c7 local2)                     // increment i
        Branch(0)                                 // loop again
//--- end while loop
        Perch(1)
        Println(local1)
        Copy(c6 local2 )                          // initialize i
//--- begin while loop
        Perch(2)
        videf1(local1 c4)
        IsEQ(c3 local2 local3)
        BranchIfTrue(3 local3)                    // Loop condition terminal
        Add(local2 c7 local2)                     // increment i
        Branch(2)                                 // loop again
//--- end while loop
        Perch(3)
        Println(local1)
//--- end of vi
    )
)))
enqueue(videf2)
