// Autogenerated Vireo assembly file
// Generated on 12/14/2016 15:41:12
define (c0 dv(.Boolean true))
define (c1 dv(.UInt32 50))
define (c2 dv(.UInt32 50))
define (c3 dv(.UInt32 50))
define (c4 dv(.UInt32 50))
define (c5 dv(.UInt32 50))
define (c6 dv(.UInt32 50))
define (c7 dv(.UInt32 50))
define (c8 dv(.UInt32 50))
define (c9 dv(.UInt32 50))
//---------------------------------------------------
//VI Definition: TestVI_TimerCount.gvi
define (_%54estVI_TimerCount%2Egvi dv(.VirtualInstrument (
    Locals: c(   // Data Space1
        e(dv(.Boolean false)dataItem_Expected)   // Boolean
        e(.UInt32 local11)   // UInt32
        e(.UInt32 local12)   // UInt32
        e(.UInt32 local13)   // UInt32
        e(.UInt16 local14)   // UInt16
        e(.UInt16 local15)   // UInt16
        e(.UInt16 local16)   // UInt16
        e(.UInt8 local17)   // UInt8
        e(.UInt8 local18)   // UInt8
        e(.UInt8 local19)   // UInt8
        e(.UInt32 local20)   // UInt32
        e(.UInt32 local21)   // UInt32
        e(dv(.UInt32 0)dataItem_UInt32MillisecondsB)   // UInt32
        e(dv(.UInt32 0)dataItem_UInt32MillisecondsA)   // UInt32
        e(.Boolean local24)   // Boolean
        e(dv(.Boolean false)dataItem_UInt32MillisecondsDifferent)   // Boolean
        e(.UInt32 local26)   // UInt32
        e(.UInt8 local27)   // UInt8
        e(dv(.UInt8 0)dataItem_UInt8TicksB)   // UInt8
        e(dv(.UInt8 0)dataItem_UInt8TicksA)   // UInt8
        e(.Boolean local30)   // Boolean
        e(dv(.Boolean false)dataItem_UInt8TicksDifferent)   // Boolean
        e(.UInt32 local32)   // UInt32
        e(.UInt8 local33)   // UInt8
        e(dv(.UInt8 0)dataItem_UInt8MicrosecondsB)   // UInt8
        e(dv(.UInt8 0)dataItem_UInt8MicrosecondsA)   // UInt8
        e(.Boolean local36)   // Boolean
        e(dv(.Boolean false)dataItem_UInt8MicrosecondsDifferent)   // Boolean
        e(.UInt32 local38)   // UInt32
        e(.UInt8 local39)   // UInt8
        e(dv(.UInt8 0)dataItem_UInt8MillisecondsB)   // UInt8
        e(dv(.UInt8 0)dataItem_UInt8MillisecondsA)   // UInt8
        e(.Boolean local42)   // Boolean
        e(dv(.Boolean false)dataItem_UInt8MillisecondsDifferent)   // Boolean
        e(.Boolean local44)   // Boolean
        e(dv(.Boolean false)dataItem_UInt8CounterSize)   // Boolean
        e(.UInt32 local46)   // UInt32
        e(.UInt16 local47)   // UInt16
        e(dv(.UInt16 0)dataItem_UInt16TicksB)   // UInt16
        e(dv(.UInt16 0)dataItem_UInt16TicksA)   // UInt16
        e(.Boolean local50)   // Boolean
        e(dv(.Boolean false)dataItem_UInt16TicksDifferent)   // Boolean
        e(.UInt32 local52)   // UInt32
        e(.UInt16 local53)   // UInt16
        e(dv(.UInt16 0)dataItem_UInt16MicrosecondsB)   // UInt16
        e(dv(.UInt16 0)dataItem_UInt16MicrosecondsA)   // UInt16
        e(.Boolean local56)   // Boolean
        e(dv(.Boolean false)dataItem_UInt16MicrosecondsDifferent)   // Boolean
        e(.UInt32 local58)   // UInt32
        e(.UInt16 local59)   // UInt16
        e(dv(.UInt16 0)dataItem_UInt16MillisecondsB)   // UInt16
        e(dv(.UInt16 0)dataItem_UInt16MillisecondsA)   // UInt16
        e(.Boolean local62)   // Boolean
        e(dv(.Boolean false)dataItem_UInt16MillisecondsDifferent)   // Boolean
        e(.Boolean local64)   // Boolean
        e(dv(.Boolean false)dataItem_UInt16CounterSize)   // Boolean
        e(.UInt32 local66)   // UInt32
        e(.UInt32 local67)   // UInt32
        e(dv(.UInt32 0)dataItem_UInt32TicksB)   // UInt32
        e(dv(.UInt32 0)dataItem_UInt32TicksA)   // UInt32
        e(.Boolean local70)   // Boolean
        e(dv(.Boolean false)dataItem_UInt32TicksDifferent)   // Boolean
        e(.UInt32 local72)   // UInt32
        e(.UInt32 local73)   // UInt32
        e(dv(.UInt32 0)dataItem_UInt32MicrosecondsB)   // UInt32
        e(dv(.UInt32 0)dataItem_UInt32MicrosecondsA)   // UInt32
        e(.Boolean local76)   // Boolean
        e(dv(.Boolean false)dataItem_UInt32MicrosecondsDifferent)   // Boolean
        e(.Boolean local78)   // Boolean
        e(dv(.Boolean false)dataItem_UInt32CounterSize)   // Boolean
        e(.Boolean local80)   // Boolean
        e(dv(.Boolean false)dataItem_Actual)   // Boolean
        e(.Boolean local82)   // Boolean
        e(.Boolean local83)   // Boolean
        e(.Boolean local84)   // Boolean
        e(.Boolean local85)   // Boolean
    )
        clump(1
        Copy(c0 dataItem_Expected )
        GetMillisecondTickCount(local11 )
        GetMicrosecondTickCount(local12 )
        GetTickCount(local13 )
        GetMillisecondTickCount(local14 )
        GetMicrosecondTickCount(local15 )
        GetTickCount(local16 )
        GetMillisecondTickCount(local17 )
        GetMicrosecondTickCount(local18 )
        GetTickCount(local19 )
        Trigger(1)
        Trigger(2)
        Trigger(3)
        Trigger(4)
        Trigger(5)
        Trigger(6)
        Trigger(7)
        Trigger(8)
        Trigger(9)
        Wait(1)
        Wait(2)
        Wait(3)
        Wait(4)
        Wait(5)
        Wait(6)
        Wait(7)
        Wait(8)
        Wait(9)
        And(local78 local64 local85)
        Copy(local85 local80 )
        Copy(local80 dataItem_Actual )
        Printf ("All tests pass: '%s'.\n" dataItem_Actual)
        Printf ("    UInt32 counter size: '%s'.\n" dataItem_UInt32CounterSize)
        Printf ("        Ticks different: '%s'.\n" dataItem_UInt32TicksDifferent)
        Printf ("        Microseconds different: '%s'.\n" dataItem_UInt32MicrosecondsDifferent)
        Printf ("        Milliseconds different: '%s'.\n" dataItem_UInt32MillisecondsDifferent)
        Printf ("    UInt16 counter size: '%s'.\n" dataItem_UInt16CounterSize)
        Printf ("        Ticks different: '%s'.\n" dataItem_UInt16TicksDifferent)
        Printf ("        Microseconds different: '%s'.\n" dataItem_UInt16MicrosecondsDifferent)
        Printf ("        Milliseconds different: '%s'.\n" dataItem_UInt16MillisecondsDifferent)
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c2 * )
        GetTickCount(local27 )
        Copy(local27 dataItem_UInt8TicksB )
        Copy(local19 dataItem_UInt8TicksA )
        IsNE(local19 local27 local30)
        Copy(local30 dataItem_UInt8TicksDifferent )
        Trigger(11)
        Wait(11)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c3 * )
        GetMicrosecondTickCount(local33 )
        Copy(local33 dataItem_UInt8MicrosecondsB )
        Copy(local18 dataItem_UInt8MicrosecondsA )
        IsNE(local18 local33 local36)
        Copy(local36 dataItem_UInt8MicrosecondsDifferent )
        Trigger(11)
        Wait(11)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c4 * )
        GetMillisecondTickCount(local39 )
        Copy(local39 dataItem_UInt8MillisecondsB )
        Copy(local17 dataItem_UInt8MillisecondsA )
        IsNE(local17 local39 local42)
        Copy(local42 dataItem_UInt8MillisecondsDifferent )
        Trigger(11)
        Wait(11)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c5 * )
        GetTickCount(local47 )
        Copy(local47 dataItem_UInt16TicksB )
        Copy(local16 dataItem_UInt16TicksA )
        IsNE(local16 local47 local50)
        Copy(local50 dataItem_UInt16TicksDifferent )
        Trigger(12)
        Wait(12)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c6 * )
        GetMicrosecondTickCount(local53 )
        Copy(local53 dataItem_UInt16MicrosecondsB )
        Copy(local15 dataItem_UInt16MicrosecondsA )
        IsNE(local15 local53 local56)
        Copy(local56 dataItem_UInt16MicrosecondsDifferent )
        Trigger(12)
        Wait(12)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c7 * )
        GetMillisecondTickCount(local59 )
        Copy(local59 dataItem_UInt16MillisecondsB )
        Copy(local14 dataItem_UInt16MillisecondsA )
        IsNE(local14 local59 local62)
        Copy(local62 dataItem_UInt16MillisecondsDifferent )
        Trigger(12)
        Wait(12)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c8 * )
        GetTickCount(local67 )
        Copy(local67 dataItem_UInt32TicksB )
        Copy(local13 dataItem_UInt32TicksA )
        IsNE(local13 local67 local70)
        Copy(local70 dataItem_UInt32TicksDifferent )
        Trigger(10)
        Wait(10)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c9 * )
        GetMicrosecondTickCount(local73 )
        Copy(local73 dataItem_UInt32MicrosecondsB )
        Copy(local12 dataItem_UInt32MicrosecondsA )
        IsNE(local12 local73 local76)
        Copy(local76 dataItem_UInt32MicrosecondsDifferent )
        Trigger(10)
        Wait(10)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c1 * )
        GetMillisecondTickCount(local21 )
        Copy(local21 dataItem_UInt32MillisecondsB )
        Copy(local11 dataItem_UInt32MillisecondsA )
        IsNE(local11 local21 local24)
        Copy(local24 dataItem_UInt32MillisecondsDifferent )
        Trigger(10)
        Wait(10)
        // Code End
/* Clump Ended. */    )
    clump(3
        And(local70 local76 local84)
        And(local24 local84 local84)
        Copy(local84 local78 )
        Copy(local78 dataItem_UInt32CounterSize )
        // Code End
/* Clump Ended. */    )
    clump(3
        And(local30 local36 local82)
        And(local42 local82 local82)
        Copy(local82 local44 )
        Copy(local44 dataItem_UInt8CounterSize )
        // Code End
/* Clump Ended. */    )
    clump(3
        And(local50 local56 local83)
        And(local62 local83 local83)
        Copy(local83 local64 )
        Copy(local64 dataItem_UInt16CounterSize )
        // Code End
/* Clump Ended. */    )
)))
enqueue (_%54estVI_TimerCount%2Egvi)
//Finished!! :D