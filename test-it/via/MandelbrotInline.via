define(MandelbrotMain dv(.VirtualInstrument (
    // Dataspace
    c(
        e(.StdOut file)
        e(.Int32 err)

        e(dv(.Utf8Char '.')    char1)
        e(dv(.Utf8Char '#')    char2)

        // TODO changed to Int32 from Utf8Char due to https://github.com/ni/VireoSDK/issues/123
        e(dv(.Int32 10) intLineFeed)

        e(dv(.String '.')    str1)
        e(dv(.String '#')    str2)
        e(dv(.String '\n')   strLineFeed)

        e(dv(.Double 1.0)    y)
        e(dv(.Double 1.0)    yFirst)
        e(dv(.Double -1.0)   yLast)
        e(dv(.Double -0.05)  yDelta)

        e(.Double   x)
        e(dv(.Double -2.0)   xFirst)
        e(dv(.Double 0.5)    xLast)
        e(dv(.Double 0.0315) xDelta)

        e(dv(.Double 2)      two)
        e(.ComplexDouble    cmplxIn)
        e(.ComplexDouble    cmplxOut)
        e(.Double           abs)

        e(.ComplexDouble cmplxZero)
        e(.Int32 i)
        e(dv(.Int32 0) c0)
        e(dv(.Int32 1) c1)
        e(.ComplexDouble    z)

        e(.String           buffer)

        e(.Int64            tStart)
        e(.Int64            tDone)
        )
    clump (1
        ArrayFill(buffer 50 char2)
        ArrayResize(buffer c0)
        GetMicrosecondTickCount(tStart)
        Copy(yFirst y)
        Perch(0)
            Copy(xFirst x)
            Perch(1)
                // Explicit constructor for simple cluster types is not needed
                // fields can be set directly
                Copy(x cmplxIn.real)
                Copy(y cmplxIn.imaginary)

                // Mandelbrot(cmplxIn cmplxOut)
                // inline the code instead
                Copy(c0 i)
                Copy(cmplxZero z)  // alternately Init(z)
                Perch(4)
                    Mul(z z z)
                    Add(z cmplxIn z)
                    Add(i 1 i)
                BranchIfLT(4 i 50)
                Absolute(z abs)

                BranchIfLT(2 abs two)
                    ArrayAppendElt(buffer char1)
                    Branch(3)
                Perch(2)
                   ArrayAppendElt(buffer char2)
                Perch(3)

                Add(x xDelta x)
            BranchIfLE(1 x xLast)

        ArrayAppendElt(buffer intLineFeed)
        Add(y yDelta y)
        BranchIfGE(0 y yLast)

        GetMicrosecondTickCount(tDone)
        StreamWrite(file buffer err)

        Sub(tDone tStart tDone)
        // Comment out so unit tests will not reject outputs with different times
        Printf("//Time to calculate Mandelbrot: %s microseconds\n" tDone)
    )
) ) )

define(Mandelbrot10 dv(.VirtualInstrument (
    // Dataspace
    c()
    clump (1
    MandelbrotMain()
/*  MandelbrotMain()
    MandelbrotMain()
    MandelbrotMain()
    MandelbrotMain()
    MandelbrotMain()
    MandelbrotMain()
    MandelbrotMain()
    MandelbrotMain()
    MandelbrotMain()
    MandelbrotMain()
    */
    )
)))

//enqueue(MandelbrotMain)
enqueue(Mandelbrot10)
