define(Mandelbrot dv(.VirtualInstrument (
    // Parameter list
    c(
        i(.ComplexDouble a)
        o(.ComplexDouble z)
    )
    // Dataspace
    c(
        e(.ComplexDouble cmplxZero)
        e(.Int32 i)
        e(dv(.Int32 0) c0)
        e(dv(.Int32 1) c1)
        e(dv(.Int32 50) c50)
    )
    clump (1
        Copy(c0 i)
        Copy(cmplxZero z)  // alternately Init(z)
        Perch(0)
            Mul(z z z)
            Add(z a z)
            Add(i c1 i)
        BranchIfLT(0 i c50)
    )
)))

define(MandelbrotMain dv(.VirtualInstrument (
    // Dataspace
    c(
        e(.StdOut file)
        e(.Int32 err)
        e(dv(.String '.')    char1)
        e(dv(.String '#')    char2)
        e(dv(.String '\n')   lineFeed)

        e(.Double           y)
        e(dv(.Double 1.0)    yFirst)
        e(dv(.Double -1.0)   yLast)
        e(dv(.Double -0.05)  yDelta)

        e(.Double           x)
        e(dv(.Double -2.0)   xFirst)
        e(dv(.Double 0.5)    xLast)
        e(dv(.Double 0.0315) xDelta)

        e(dv(.Double 2)      two)
        e(.ComplexDouble    cmplxIn)
        e(.ComplexDouble    cmplxOut)
        e(.Double           abs)
        )
    clump (1
        Copy(yFirst y)
        Perch(0)
            Copy(xFirst x)
            Perch(1)
                // Explicit constructor for simple cluster types is not needed
                // fields can be set directly
                Copy(x cmplxIn.real)
                Copy(y cmplxIn.imaginary)
                Mandelbrot(cmplxIn cmplxOut)
                Absolute(cmplxOut abs)
                BranchIfLT(2 abs two)
                    StreamWrite(file char1 err)
                    Branch(3)
                Perch(2)
                    StreamWrite(file char2 err)
                Perch(3)
            Add(x xDelta x)
            BranchIfLE(1 x xLast)

        StreamWrite(file lineFeed err)
        Add(y yDelta y)
        BranchIfGE(0 y yLast)
    )
) ) )
enqueue(MandelbrotMain)
