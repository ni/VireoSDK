// Copyright (c) 2020 National Instruments
// SPDX-License-Identifier: MIT

define(NI_InternalFunction dv(VirtualInstrument (
    Locals: c(
        e(c(
            e(.Boolean status)
            e(.Int32 code)
            e(.String source)
        ) error)
        e(dv(.Int32 1) value)
        e(dv(.Int32 0) returnValue)
        e(.Occurrence occurrence)
    )
    clump (
        JavaScriptInvoke(occurrence true error 'NI_InternalFunction' returnValue value)
    )
) ) )

define(NI_InternalFunctionSetsError dv(VirtualInstrument (
    Locals: c(
        e(c(
            e(.Boolean status)
            e(.Int32 code)
            e(.String source)
        ) error)
        e(dv(.Int32 11) value)
        e(dv(.Int32 0) returnValue)
        e(.Occurrence occurrence)
    )
    clump (
        JavaScriptInvoke(occurrence true error 'NI_InternalFunctionSetsError' returnValue value)
    )
) ) )

define(NI_InternalFunctionNoErrorCluster dv(VirtualInstrument (
    Locals: c(
        e(dv(.Int32 111) value)
        e(dv(.Int32 0) returnValue)
        e(.Occurrence occurrence)
    )
    clump (
        JavaScriptInvoke(occurrence true * 'NI_InternalFunctionNoErrorCluster' returnValue value)
    )
) ) )

define(NI_InternalFunctionNoErrorClusterSetsError dv(VirtualInstrument (
    Locals: c(
        e(dv(.Int32 1111) value)
        e(dv(.Int32 0) returnValue)
        e(.Occurrence occurrence)
    )
    clump (
        JavaScriptInvoke(occurrence true * 'NI_InternalFunctionNoErrorClusterSetsError' returnValue value)
    )
) ) )

define(NI_InternalFunction_DoesNotExist dv(VirtualInstrument (
    Locals: c(
        e(c(
            e(.Boolean status)
            e(.Int32 code)
            e(.String source)
        ) error)
        e(dv(.Int32 1) value)
        e(dv(.Int32 0) returnValue)
        e(.Occurrence occurrence)
    )
    clump (
        JavaScriptInvoke(occurrence true error 'NI_InternalFunction_DoesNotExist' returnValue value)
    )
) ) )
