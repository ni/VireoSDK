// Copyright (c) 2020 National Instruments
// SPDX-License-Identifier: MIT

define(MyVI dv(VirtualInstrument (
    Locals: c(
        e(c(e(.Boolean status) e(.Int32 code) e(.String source)) error1)
        e(c(e(.Boolean status) e(.Int32 code) e(.String source)) error2)
        e(c(e(.Boolean status) e(.Int32 code) e(.String source)) error3)
        e(c(e(.Boolean status) e(.Int32 code) e(.String source)) error4)
        e(c(e(.Boolean status) e(.Int32 code) e(.String source)) error5)
        e(c(e(.Boolean status) e(.Int32 code) e(.String source)) error6)
        e(c(e(.Boolean status) e(.Int32 code) e(.String source)) error7)
        e(c(e(.Boolean status) e(.Int32 code) e(.String source)) error8)
        e(c(e(.Boolean status) e(.Int32 code) e(.String source)) error9)
        e(c(e(.Boolean status) e(.Int32 code) e(.String source)) error10)
        e(c(e(.Boolean status) e(.Int32 code) e(.String source)) error11)
        e(c(e(.Boolean status) e(.Int32 code) e(.String source)) error12)
        e(.JavaScriptStaticRefNum refStatic1)
        e(.JavaScriptStaticRefNum refStatic2)
        e(.JavaScriptStaticRefNum refStatic3)
        e(.JavaScriptStaticRefNum refStatic4)
        e(.JavaScriptDynamicRefNum refDynamic1)
        e(.JavaScriptDynamicRefNum refDynamic2)
        e(.JavaScriptDynamicRefNum refDynamic3)
        e(.JavaScriptDynamicRefNum refDynamic4)
        e(.JavaScriptDynamicRefNum refDynamic5)
        e(dv(.String "Foo") name1)
        e(dv(.String "FooBar") name2)
        e(dv(.String "FooBarBaz") name3)
        e(dv(.Int32 0) length1)
        e(dv(.Int32 0) length2)
        e(dv(.Int32 0) length3)
        e(dv(.Boolean false) isEqual)
        e(dv(.Boolean false) isNotEqual)
        e(dv(.Boolean false) isNotANumPathRefnum1)
        e(dv(.Boolean false) isNotANumPathRefnum2)
        e(dv(.Boolean false) isNotANumPathRefnum3)
        e(dv(.Boolean false) isNotANumPathRefnum4)
        e(dv(.Boolean false) isSharedStaticRef)
        e(dv(.Boolean false) isSharedDynamicRef)
        e(dv(.Boolean false) isSharedPrimRef)
        e(dv(.Boolean false) isSharedNullRef)
        e(dv(.Boolean false) isSharedUndefinedRef)
        e(dv(.Boolean true) internal)
        e(.Occurrence occurrence)
    )
    clump (
        // Get js object refs
        JavaScriptInvoke(occurrence internal error1 'NI_GetObjectFunction' refStatic1 name1)
        JavaScriptInvoke(occurrence internal error2 'NI_GetObjectFunction' refStatic2 name2)
        IsEQ(refStatic1 refStatic2 isEqual)
        IsNE(refStatic1 refStatic2 isNotEqual)
        IsNotANumPathRefnum(refStatic1 isNotANumPathRefnum1)
        IsNotANumPathRefnum(refStatic2 isNotANumPathRefnum2)

        // Use the js object refs
        JavaScriptInvoke(occurrence internal error3 'NI_UseObjectFunction' length1 refStatic1)
        JavaScriptInvoke(occurrence internal error4 'NI_UseObjectFunction' length2 refStatic2)
        
        // Get the same js object from a static ref
        JavaScriptInvoke(occurrence internal error5 'NI_GetObjectFunction' refStatic3 name1) 
        IsEQ(refStatic1 refStatic3 isSharedStaticRef)

        // Get the same js object from a dynamic ref
        JavaScriptInvoke(occurrence internal error5 'NI_GetObjectFunction' refDynamic3 name2) 
        JavaScriptInvoke(occurrence internal error5 'NI_GetObjectFunction' refDynamic4 name2) 
        IsEQ(refDynamic3 refDynamic4 isSharedDynamicRef)

        // Primitive types don't get same js ref
        JavaScriptInvoke(occurrence internal error6 'NI_GetPrimitiveFunction' refDynamic1)
        JavaScriptInvoke(occurrence internal error7 'NI_GetPrimitiveFunction' refDynamic2)
        IsEQ(refDynamic1 refDynamic2 isSharedPrimRef)

        // JS null doesn't get the same js ref
        JavaScriptInvoke(occurrence internal error5 'NI_GetNullFunction' refDynamic3) 
        JavaScriptInvoke(occurrence internal error5 'NI_GetNullFunction' refDynamic4) 
        IsEQ(refDynamic3 refDynamic4 isSharedNullRef)

        // JS undefined doesn't get the same js ref
        JavaScriptInvoke(occurrence internal error5 'NI_GetUndefinedFunction' refDynamic3) 
        JavaScriptInvoke(occurrence internal error5 'NI_GetUndefinedFunction' refDynamic4) 
        IsEQ(refDynamic3 refDynamic4 isSharedUndefinedRef)

        // Use un-inialized ref
        IsNotANumPathRefnum(refStatic4 isNotANumPathRefnum3)
        JavaScriptInvoke(occurrence internal error8 'NI_UseObjectFunction' length3 refStatic4)
        IsNotANumPathRefnum(refDynamic5 isNotANumPathRefnum4)
        JavaScriptInvoke(occurrence internal error9 'NI_UseObjectFunction' length3 refDynamic5)

        // Setting pre-initalized ref to the same js object is ok, this case can happen for JSLI with in/out ref terminal
        JavaScriptInvoke(occurrence internal error10 'NI_GetObjectFunction' refStatic1 name1)

        // Setting pre-initalized ref to a different object is ok, this case can happen for a reference wire in a loop (ie, reference property read in a loop)
        JavaScriptInvoke(occurrence internal error11 'NI_GetObjectFunction' refStatic1 name2)
    )
) ) )

enqueue(MyVI)
