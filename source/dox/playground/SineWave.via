// Copyright (c) 2020 National Instruments
// SPDX-License-Identifier: MIT

// Draw a sine wave onthe canvas scope style

define (c0 dv(.String 'theCanvas') )
define (c1 dv(.Boolean true) )
define (c2 .Boolean )
define (c3 dv(.UInt32 20) )
define (c4 dv(.Double 10000.000000) )
define (c5 dv(.Double 500.000000) )
define (c6 .Double )
define (c7 dv(.Int32 500) )
define (c8 dv(.Double 100.000000) )
define (c9 dv(.Double 0.500000) )
define (c10 .Boolean )
define (c11 dv(.Boolean true) )
define (c12 .Int32 )
define (c13 dv(.Int32 1) )
//---------------------------------------------------
//VI Definition: ObtainCanvas2D.vi
define (_ObtainCanvas2D%2Evi dv(.VirtualInstrument (
    c(
        o(.Canvas2D _v3_Canvas%20refnum)   // Canvas refnum
        i(.String _v1_Name)   // Name
    )
    c(
        e(.Canvas2D _v2_Refnum%20out%202)   // Refnum out 2
    )
        clump(1
        ObtainCanvas2D(_v2_Refnum%20out%202 _v1_Name)
        Copy(_v2_Refnum%20out%202 _v3_Canvas%20refnum )
//--- end of vi
    )
)))
//---------------------------------------------------
//VI Definition: VireoScope3.vi
define (_VireoScope3%2Evi dv(.VirtualInstrument (
    c(
        i(dv(.UInt32 10551270) _v2_LineColor)   // LineColor
        i(dv(.Double 5.000000) _v4_Amplitude)   // Amplitude
        i(dv(.UInt32 20) _v6_milliseconds%20to%20wait)   // milliseconds to wait
        i(dv(.Double 5.000000) _v5_NoiseLevel)   // NoiseLevel
    )
    c(
        e(.Boolean _v1_Clear)   // Clear
        e(dv(.Double 0.030000) _v3_DeltaT)   // DeltaT
        e(dv(.Double 0.600000) _v7_Alpha)   // Alpha
        e(dv(.UInt32 2853120) _v8_BackGroundColor)   // BackGroundColor
        e(.Int32 _v9_FrameCount)   // FrameCount
        e(.Canvas2D _v10_Canvas%20refnum)   // Canvas refnum
        e(.Int32 _v11)
        e(.Int32 _v12_Color)   // Color
        e(.Double _v13_number%3A%200%20to%201)   // number: 0 to 1
        e(.Int32 _v14)
        e(.Int32 _v15)
        e(.Canvas2D _v16_Canvas%20refnum)   // Canvas refnum
        e(.Canvas2D _v17_Canvas%20refnum)   // Canvas refnum
        e(.Double _v18_X)   // X
        e(.Double _v19)
        e(.Boolean _v20)
        e(.Double _v21_NoiseLevel)   // NoiseLevel
    )
    clump(
        Printf("Switch to the canvas tab to see the sine wave\n")
        Printf("\n")
        Printf("A sample scope like display using the HTML5 canvas\n")

        _ObtainCanvas2D%2Evi(_v10_Canvas%20refnum c0)
        Trigger(1)                                // fork
//--- begin loop
        Perch(0)
        Copy(c1 _v1_Clear )
        WaitMilliseconds(c3)
        BranchIfTrue(1 c2)                        // Loop condition terminal
//--- end loop
        Branch(0)                                 // loop again
        Perch(1)
        Wait(1)                  // join
//--- end of vi
    )
    clump(1
        Copy(c12 _v11 )                           // initialize i
//--- begin loop
        Perch(0)
        Convert(_v2_LineColor _v12_Color)
        StrokeStyle(_v10_Canvas%20refnum _v12_Color)
        Random(_v13_number%3A%200%20to%201)
        Mul(_v13_number%3A%200%20to%201 c4 _v13_number%3A%200%20to%201)
        Convert(_v13_number%3A%200%20to%201 _v12_Color)
        BeginPath(_v10_Canvas%20refnum)
        MoveTo(_v10_Canvas%20refnum c6 c8)
        Copy(c12 _v14 )                           // initialize i
        Sub(c7 c13 _v15)
        Copy(_v10_Canvas%20refnum _v16_Canvas%20refnum )// Pre-Loop copy into LSR
//--- begin loop
        Perch(1)
        Copy(_v16_Canvas%20refnum _v17_Canvas%20refnum )// LSR copy into inner wire
        Random(_v13_number%3A%200%20to%201)
        Sub(_v13_number%3A%200%20to%201 c9 _v13_number%3A%200%20to%201)
        Convert(_v14 _v18_X)
        Convert(_v14 _v19)
        IsEQ(_v14 _v12_Color _v20)
        Copy(_v5_NoiseLevel _v21_NoiseLevel )
        BranchIfFalse(2 _v20)
        Copy(c8 _v21_NoiseLevel )
        Perch(2)
        Mul(_v21_NoiseLevel _v13_number%3A%200%20to%201 _v13_number%3A%200%20to%201)
        Mul(_v3_DeltaT _v19 _v19)
        Sine(_v19 _v19 )
        Mul(_v4_Amplitude _v19 _v19)
        Add(_v19 _v13_number%3A%200%20to%201 _v13_number%3A%200%20to%201)
        Add(c8 _v13_number%3A%200%20to%201 _v13_number%3A%200%20to%201)
        LineTo(_v17_Canvas%20refnum _v18_X _v13_number%3A%200%20to%201)
        Copy(_v17_Canvas%20refnum _v16_Canvas%20refnum )
        BranchIfGEInt32(3 _v14 _v15)
        Add(_v14 c13 _v14)                        // increment i
//--- end loop
        Branch(1)                                 // loop again
        Perch(3)
        Copy(_v16_Canvas%20refnum _v17_Canvas%20refnum )// tunnel out
        Stroke(_v17_Canvas%20refnum)
        WaitMilliseconds(_v6_milliseconds%20to%20wait)
//--- begin case structure
        Copy(_v1_Clear _v20 )                     // case input tunnel
        BranchIfTrue(4 _v1_Clear)                 // CaseStructure test
//--- default case
        Branch(5)
//--- case
        Perch(4)
        Copy(c10 _v1_Clear )
        Convert(_v8_BackGroundColor _v12_Color)
        FillStyle(_v17_Canvas%20refnum _v12_Color _v7_Alpha)
        FillRect(_v17_Canvas%20refnum c6 c6 c5 c5)
//--- end case structure
        Perch(5)
        Copy(_v11 _v9_FrameCount )
        BranchIfTrue(6 c2)                        // Loop condition terminal
        Add(_v11 c13 _v11)                        // increment i
//--- end loop
        Branch(0)                                 // loop again
        Perch(6)
    )
)))
enqueue (_VireoScope3%2Evi)
